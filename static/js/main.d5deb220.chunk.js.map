{"version":3,"sources":["components/Navbar.js","lib/erc20.js","components/ConnectWallet.js","components/Footer.js","lib/datastorage.js","lib/userAccess.js","lib/helpers.js","views/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","connectWallet","className","to","type","id","role","polygonProvider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","process","abi","address","value","approve","data","waitForTransaction","hash","console","log","getOwnedEmojis","balanceOf","ConnectWallet","onAccountConnect","useState","web3Modal","setWeb3Modal","setAddress","emojis","setEmojis","show","setShow","connect","addListeners","provider","getAddress","then","userAddress","clearCachedProvider","setBalances","Math","round","web3ModalProvider","on","accounts","location","reload","chainId","useEffect","newWeb3Modal","Web3Modal","cacheProvider","network","cachedProvider","Toast","onClose","delay","autohide","Body","onClick","slice","toUpperCase","showBalances","Footer","templateId","getTemplate","getMintPrice","mintCoin","error","coinGrades","grade","coinTypes","Home","accountConnected","useParams","mintEnabled","setMintEnabled","showMessage","setShowMessage","headerMessage","setHeaderMessage","mintLimitStart","setMintLimitStart","mintLimitEnd","setMintLimitEnd","showErrorMessage","setShowErrorMessage","headerErrorMessage","setHeaderErrorMessage","setTemplateId","templateDetail","setTemplateDetail","coinType","setCoinType","coinGrade","setCoinGrade","emojiCount","setEmojiCount","modalErrors","setModalErrors","mintCoinModalVisibiltiy","setMintCoinModalVisibiltiy","mintCoinStep","setMintCoinStep","mintCoinApproveBtnText","setMintCoinApproveBtnText","mintCoinApproveBtnDisabled","setMintCoinApproveBtnDisabled","mintCoinActionBtnText","setMintCoinActionBtnText","mintCoinActionBtnDisabled","setMintCoinActionBtnDisabled","loadTemplate","isValidTemplateId","getCoinType","getCoinGrade","coinPrice","catch","coinMintCount","val","extractMessage","message","startIndex","indexOf","userMessage","substring","length","fetch","method","headers","response","ok","json","Error","errorMsg","Alert","variant","dismissible","maxLength","onChange","event","target","replace","xmlns","width","height","fill","viewBox","fillRule","d","coinName","Modal","onHide","centered","Header","closeButton","Title","steps","title","activeStep","size","circleFontSize","titleTop","Button","disabled","App","setAccountConnected","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d5deb220.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"../assets/css/Home.css\";\n\nfunction Navbar( { connectWallet} ) {\n  return (\n    <>\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\"><i>EmojiCoins Minting</i></Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">    \n                </ul>\n                <div className=\"d-flex\" role=\"search\">\n                    {connectWallet}\n                </div>\n            </div>\n        </div>\n    </nav>\n    </>\n  );\n}\n\nexport default Navbar;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc20.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC20_TOKEN_ADDRESS, abi, signer)\n\nexport async function approve(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}\n\nexport async function getOwnedEmojis(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}","import { useState, useEffect } from 'react';\nimport { providers } from \"ethers\";\nimport Web3Modal from 'web3modal'\nimport { getOwnedEmojis } from \"../lib/erc20\";\nimport Toast from 'react-bootstrap/Toast';\n\nfunction ConnectWallet({ onAccountConnect }) {\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const [address, setAddress] = useState(\"\");\n    const [emojis, setEmojis] = useState(0);\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n    \n        const newWeb3Modal = new Web3Modal({\n          cacheProvider: true, \n          network: \"mainnet\",\n        });\n    \n        setWeb3Modal(newWeb3Modal)\n    }, [])\n\n    useEffect(() => {\n        if(web3Modal && web3Modal.cachedProvider){\n          connectWallet()\n        }\n    }, [web3Modal])\n\n    async function connectWallet() {\n      const provider = await web3Modal.connect();\n      addListeners(provider);\n      const ethersProvider = new providers.Web3Provider(provider)\n      ethersProvider.getSigner().getAddress().then(userAddress => {\n        setAddress(userAddress)\n        onAccountConnect(userAddress);\n      });\n    }\n\n    async function disconnectWallet(){\n        await web3Modal.clearCachedProvider();\n        setAddress(\"\")\n    }\n\n    async function showBalances(){\n      setBalances(address);\n      setShow(true);\n    }    \n\n    async function setBalances(userAddress){\n      getOwnedEmojis(userAddress).then(data => {\n          setEmojis(Math.round(data / 10000000000000000) / 100);\n      });\n    }\n\n    async function addListeners(web3ModalProvider) {\n          web3ModalProvider.on(\"accountsChanged\", (accounts) => {\n          window.location.reload()\n        });\n        \n        // Subscribe to chainId change\n        web3ModalProvider.on(\"chainChanged\", (chainId) => {\n          window.location.reload()\n        });\n    }\n\n    return (\n      <>\n        { address ? (\n              <>\n                  <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n                    <Toast.Body><div><div className=\"mx-4 toast-row\">{emojis} Emojis</div></div></Toast.Body>\n                  </Toast>\n                  <button className=\"btn btn-outline-danger mx-2\" type=\"button\" onClick={disconnectWallet}>Disconnect {address.slice(-6).toUpperCase()}</button> \n                  <button className=\"btn btn-outline-secondary mx-2\" type=\"button\" onClick={() => showBalances()}>Show Balance</button>\n              </>\n          ): (\n              <button type=\"button\" className=\"btn btn-outline-success\" onClick={connectWallet}>Connect Wallet</button>\n          )}\n      </>\n    );\n}\n\nexport default ConnectWallet;\n","import \"../assets/css/base.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n    <div>\r\n      <footer className=\"py-1 bg-dark fixed-bottom footer\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            &copy; 2021 - 2022 EmojiCoins\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/dataStorage.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst contract = new ethers.Contract(process.env.REACT_APP_DATASTORE_ADDRESS, abi , polygonProvider)\n\nexport async function getTemplate(templateId){\n    const data = await contract.getTemplate(templateId);\n    return data;\n}","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/userAccess.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_USERACCESS_ADDRESS, abi, signer)\n\nexport async function getMintPrice(templateId){\n    const data = await contract.getMintPrice(templateId);\n    return data;\n}\n\nexport async function mintCoin(templateId){\n    try {\n        const data = await contract.mintCoin(templateId);\n        await polygonProvider.waitForTransaction(data.hash);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}","import { ethers } from \"ethers\";\n\nconst coinValues = {\n    1: 1, \n    2: 10,\n    3: 50,\n    4: 200,\n    10: 100, \n    11: 500,\n    12: 1000, \n    20: 4000, \n    21: 200000,\n    22: 400000\n}\n\nexport async function getCoinPrice(coinType){\n    return coinValues[coinType] ? ethers.utils.parseEther(coinValues[coinType].toString())  : false;\n}\n\nconst coinGrades = {\n    1 :\"P1\",\n    2 : \"FR2\",\n    3 : \"AG3\",\n    4 : \"G4\",\n    5 : \"VG5\",\n    6 : \"F12\",\n    7 : \"VF20\",\n    8 : \"VF30\",\n    9 : \"EF40\",\n    10 : \"XF45\",\n    11 : \"AU50\",\n    12 : \"AU55\",\n    13 : \"AU58\",\n    14 : \"MS60\",\n    15 : \"MS61\",\n    16 : \"MS62\",\n    17 : \"MS63\",\n    18 : \"MS64\",\n    19 : \"MS65\",\n    20 : \"MS66\",\n    21 : \"MS67\",\n    22 : \"MS68\",\n    23 : \"MS69\",\n    24 : \"MS70\"\n}\n\nexport async function getCoinGrade(grade){\n    return coinGrades[grade] ;\n}\n\nconst coinTypes = {\n    1 : \"Copper\",\n    2 : \"Silver-Plated\",\n    3 : \"Gold-Plated\",\n    4 : \"Limited Edition\",\n    10 : \"Silver\",\n    11 : \"Silver Gold-Plated\",\n    12 : \"Silver Limited Edition\",\n    20 : \"Gold / Silver Bi-Metal\",\n    21 : \"Gold\",\n    22 : \"Gold Limited Edition\"\n}\n\nexport async function getCoinType(type){\n    return coinTypes[type] ;\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Stepper from \"react-stepper-horizontal/lib/Stepper\";\nimport { getTemplate } from \"../lib/datastorage\";\nimport { getMintPrice, mintCoin } from \"../lib/userAccess\";\nimport { getCoinGrade, getCoinType } from \"../lib/helpers\";\nimport { approve } from \"../lib/erc20\";\nimport \"../assets/css/Home.css\";\n\n\nfunction Home( { accountConnected} ) {\n  const { id } = useParams();\n  const [ mintEnabled, setMintEnabled ] = useState(null);\n  const [ showMessage, setShowMessage ] = useState(false);\n  const [ headerMessage, setHeaderMessage ] = useState(null);\n  const [ mintLimitStart, setMintLimitStart ] = useState(null);\n  const [ mintLimitEnd, setMintLimitEnd ] = useState(null);\n  const [ showErrorMessage, setShowErrorMessage ] = useState(false);\n  const [ headerErrorMessage, setHeaderErrorMessage ] = useState(null);\n  const [ templateId, setTemplateId ] = useState(0);\n  const [ templateDetail, setTemplateDetail] = useState(null);\n  const [ coinType, setCoinType ] = useState(\"\");\n  const [ coinGrade, setCoinGrade ] = useState(\"\");\n  const [ emojiCount, setEmojiCount ] = useState(0);\n  const [ modalErrors, setModalErrors ] = useState(\"\");\n  const [ mintCoinModalVisibiltiy, setMintCoinModalVisibiltiy] = useState(false);\n  const [ mintCoinStep, setMintCoinStep ] = useState(0);\n  const [ mintCoinApproveBtnText, setMintCoinApproveBtnText] = useState(\"Approve\");\n  const [ mintCoinApproveBtnDisabled, setMintCoinApproveBtnDisabled] = useState(false);\n  const [ mintCoinActionBtnText, setMintCoinActionBtnText] = useState(\"Mint\");\n  const [ mintCoinActionBtnDisabled, setMintCoinActionBtnDisabled] = useState(false);\n\n  useEffect(() => {\n\n    if (mintEnabled === null)\n    {\n      if (!fetchVariables()) return;\n    }\n    else if (!mintEnabled) return;\n\n    if (id != null) {\n      setTemplateId(id);\n      loadTemplate(id);\n    }\n\n  }, [accountConnected])\n\n  function fetchVariables() {\n    const varURL =\"https://mlasss.github.io/ecoin-var/mint.json\"; \n\n    fetch(varURL, {\n      method: \"get\",\n      headers: {\n        \"Accept\": \"application/json\",\n      },\n    })\n    .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Failed to load mint variables.\");\n        }\n    })\n    .then(data => { \n        if (data.mintEnabled != null) setMintEnabled(data.mintEnabled);\n        else throw new Error(\"Corrupted mint variables [mintEnabled missing].\");\n        if (data.mintLimitStart != null) setMintLimitStart(data.mintLimitStart);\n        else throw new Error(\"Corrupted mint variables [mintLimitStart missing].\");\n        if (data.mintLimitEnd != null) setMintLimitEnd(data.mintLimitEnd);\n        else throw new Error(\"Corrupted mint variables [mintLimitEnd missing].\");\n        if (data.headerMessage != null) setHeaderMessage(data.headerMessage);\n        else throw new Error(\"Corrupted mint variables [headerMessage missing].\");\n        setShowMessage(true);\n    })\n    .catch(errorMsg => {\n        setHeaderErrorMessage(errorMsg.message);\n        setShowErrorMessage(true);\n        setMintEnabled(false);\n        setHeaderMessage(\"Coin minting can not be executed.\");\n        setShowMessage(true);\n        console.error(errorMsg);\n        return false;\n    });    \n    return true;\n  }\n\n  function loadTemplate(templateId){\n    if (!isValidTemplateId(templateId)) return;\n\n    setShowErrorMessage(false);\n    setEmojiCount(0);\n    getTemplate(templateId).then(data => {\n      if (data != null) {\n        setTemplateDetail(data);\n\n        getCoinType(data.coinType).then(type => {\n          setCoinType(type);\n        });\n\n        getCoinGrade(data.coinGrade).then(grade => {\n          setCoinGrade(grade);\n        });\n\n        getMintPrice(templateId).then(coinPrice => {\n          setEmojiCount(coinPrice / 1000000000000000000);\n        }).catch(error => {\n          setEmojiCount(0);\n        });\n\n        if (data?.coinMintCount > 0) {\n          setHeaderErrorMessage(`The Coin Template ${templateId} is already minted.`);\n          setShowErrorMessage(true);\n        }\n      }\n    }).catch(error => {\n      setTemplateDetail(null);\n      setHeaderErrorMessage(`Failed to load Coin Template ${templateId}.`);\n      setShowErrorMessage(true);\n    });\n  }\n\n  function isValidTemplateId(templateId){\n    if (templateId >= mintLimitStart && templateId < mintLimitEnd) return true;\n    setHeaderErrorMessage(`Please provide correct Coin Template Id.`);\n    setShowErrorMessage(true);\n    return false;\n  }\n\n  function loadTemplateClick()\n  {\n    loadTemplate(templateId);\n  }\n\n  // Mint Coin Modal -----------------------------------------------------------------\n\n  function mintCoinModalShow(){\n    if (!mintEnabled) return;\n    setMintCoinStep(0);\n    setMintCoinApproveBtnText(\"Approve Emoji Burn\");\n    setMintCoinActionBtnText(\"Mint\");\n    setMintCoinApproveBtnDisabled(false);\n    setMintCoinActionBtnDisabled(true);\n    setMintCoinModalVisibiltiy(true);\n    setModalErrors(\"\");\n  }\n\n  function mintCoinApproveClick(){\n    resetMintCoinModalFields();\n    setMintCoinApproveBtnText(\"Approving...\");\n    setMintCoinApproveBtnDisabled(true);\n    getMintPrice(templateId).then(coinPrice => {\n      approve(process.env.REACT_APP_USERACCESS_ADDRESS, coinPrice).then(val => {\n        if (val === \"1\"){\n          setMintCoinStep(1);\n          setMintCoinActionBtnDisabled(false);\n          setMintCoinApproveBtnText(\"Approved\");\n        } else {\n          setModalErrors(extractMessage(val?.message));\n          setMintCoinApproveBtnDisabled(false);\n          setMintCoinApproveBtnText(\"Approve Emoji Burn\");\n        }\n      })\n    })\n  }\n\n  async function mintCoinClick(){\n    setModalErrors(\"\");\n    setMintCoinActionBtnDisabled(true);\n    setMintCoinActionBtnText(\"Minting...\");\n    mintCoin(templateId).then(val => {\n      if (val === \"1\"){\n        setHeaderMessage(\"The Coin was minted successfully and shortly will arrive in your wallet!\");\n        setShowMessage(true);\n        setMintCoinModalVisibiltiy(false);\n      } else {\n        setModalErrors(extractMessage(val?.message));\n      }\n      setMintCoinActionBtnText(\"Mint\");\n      setMintCoinActionBtnDisabled(false);\n    })\n  }\n\n  function resetMintCoinModalFields(){\n    setModalErrors(\"\");\n    setMintCoinActionBtnDisabled(true);\n  }  \n\n  function extractMessage(message) {\n    if (message == null) return \"Failed to execute transaction.\";\n\n    let startIndex = message.indexOf('execution reverted:');\n    if (startIndex > 0)\n    {\n      let userMessage = message.substring(startIndex + 20);\n      return userMessage.substring(0, userMessage.indexOf('\"'))\n    }\n\n    if (message.length > 100) return \"Failed to execute transaction.\";\n\n    return message;\n  }\n\n  return (\n    <>\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card galery-container\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div>\n                  <Alert variant=\"secondary\" show={showMessage} onClose={() => setShowMessage(false)} dismissible>\n                    <p className=\"mb-0\">\n                        {headerMessage}\n                    </p>\n                  </Alert>  \n                  <Alert variant=\"danger\" show={showErrorMessage} onClose={() => setShowErrorMessage(false)} dismissible>\n                    <p className=\"mb-0\">\n                        {headerErrorMessage}\n                    </p>\n                  </Alert>\n                </div>\n                <span><b>{'Enter Coin Template Id'}</b></span>\n                <div className=\"col-md-4\">\n                  <input maxLength={5} className=\"form-control\" value={templateId != null ? templateId : 0 } onChange={event => setTemplateId(event.target.value.replace(/\\D/,''))} />\n                </div>\n                <div className=\"col-md-4\">\n                  {\n                    true ? (\n                      <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={loadTemplateClick}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 19 19\">\n                          <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\n                          <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\n                        </svg>                             \n                        Load Template\n                      </button>) \n                    : <></>\n                  }\n                </div>\n              </div>\n              <br/>\n              <div className=\"row\">\n                <div className=\"col-md-12 px-1\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Name:</b> { templateDetail?.coinName }</div>\n                          </div>\n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Coin Type:</b> { coinType }</div>\n                          </div>\n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Coin Grade:</b> { coinGrade }</div>\n                          </div>     \n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail?.coinMintCount > 0 ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Minted Count:</b> { templateDetail?.coinMintCount }</div>\n                          </div>                          \n                          ) \n                          : <></>\n                      }                             \n                      {\n                        emojiCount > 0 ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Minting Price:</b> { emojiCount } Emojis</div>\n                            <br/>\n                            <br/>\n                          </div>                                                        \n                          ) \n                          : <></>\n                      } \n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"btn-group\" role=\"group\">\n                            {\n                              mintEnabled && emojiCount > 0 && accountConnected != null ? (\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={mintCoinModalShow}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-plus-square\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                                  <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                                </svg>                                                                \n                                Mint Coin\n                              </button>) \n                            : <></>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n\n              <Modal show={mintCoinModalVisibiltiy} onHide={() => setMintCoinModalVisibiltiy(false)} centered>\n                <Modal.Header closeButton>\n                  <Modal.Title>Mint Coin</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <span>{'You must burn ' + emojiCount + ' Emojis to mint this coin.'}</span><br/>\n                  <span className=\"text-danger\">{modalErrors}</span>\n                </Modal.Body>\n                <Stepper steps={ [{title: 'Approve Emoji Burn'}, {title: 'Mint Coin'}] } activeStep={ mintCoinStep } size={32} circleFontSize={0} titleTop={4} />\n                <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n                  <Button variant=\"secondary\" onClick={mintCoinApproveClick} disabled={mintCoinApproveBtnDisabled}>\n                    { mintCoinApproveBtnText }\n                  </Button>\n                  <Button variant=\"primary\" disabled={mintCoinActionBtnDisabled} onClick={mintCoinClick}>\n                    { mintCoinActionBtnText }\n                  </Button>\n                </Modal.Footer>\n              </Modal> \n\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;","import { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport ConnectWallet from \"./components/ConnectWallet\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./views/Home\";\n\nfunction App() {\n  const [ accountConnected, setAccountConnected] = useState(null);\n\n  function handleOnAccountConnect(val){\n    setAccountConnected(val);\n  }\n\n  return (\n    <>\n      <Navbar connectWallet={<ConnectWallet onAccountConnect={handleOnAccountConnect}/>}/>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home accountConnected={accountConnected}/>} />\n          <Route path=\"/:id\" element={<Home accountConnected={accountConnected}/>} />\n        </Routes>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport \"./assets/css/base.css\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}