{"version":3,"sources":["components/Navbar.js","lib/erc20.js","components/ConnectWallet.js","components/Footer.js","lib/datastorage.js","lib/userAccess.js","lib/helpers.js","views/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","connectWallet","className","to","type","id","role","polygonProvider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","process","abi","address","value","approve","data","waitForTransaction","hash","console","log","getOwnedEmojis","balanceOf","ConnectWallet","onAccountConnect","useState","web3Modal","setWeb3Modal","setAddress","emojis","setEmojis","show","setShow","connect","addListeners","provider","getAddress","then","userAddress","clearCachedProvider","setBalances","Math","round","web3ModalProvider","on","accounts","location","reload","chainId","useEffect","newWeb3Modal","Web3Modal","cacheProvider","network","cachedProvider","Toast","onClose","delay","autohide","Body","onClick","slice","toUpperCase","showBalances","Footer","templateId","getTemplate","getMintPrice","mintCoin","error","coinGrades","grade","coinTypes","Home","accountConnected","useParams","setTemplateId","inputErrors","setInputErrors","templateDetail","setTemplateDetail","coinType","setCoinType","coinGrade","setCoinGrade","emojiCount","setEmojiCount","modalErrors","setModalErrors","mintCoinModalVisibiltiy","setMintCoinModalVisibiltiy","mintCoinStep","setMintCoinStep","mintCoinApproveBtnText","setMintCoinApproveBtnText","mintCoinApproveBtnDisabled","setMintCoinApproveBtnDisabled","mintCoinActionBtnText","setMintCoinActionBtnText","mintCoinActionBtnDisabled","setMintCoinActionBtnDisabled","loadTemplate","getCoinType","getCoinGrade","coinPrice","catch","coinMintCount","val","alert","extractMessage","message","startIndex","indexOf","userMessage","substring","length","maxLength","onChange","event","target","replace","xmlns","width","height","fill","viewBox","fillRule","d","coinName","Modal","onHide","centered","Header","closeButton","Title","steps","title","activeStep","size","circleFontSize","titleTop","Button","variant","disabled","App","setAccountConnected","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b2d6a8b4.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport \"../assets/css/Home.css\";\n\n\nfunction Navbar( { connectWallet} ) {\n  return (\n    <>\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\"><i>EmojiCoins Minter</i></Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">    \n                </ul>\n                <div className=\"d-flex\" role=\"search\">\n                    {connectWallet}\n                </div>\n            </div>\n        </div>\n    </nav>\n    </>\n  );\n}\n\nexport default Navbar;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc20.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC20_TOKEN_ADDRESS, abi, signer)\n\nexport async function approve(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}\n\nexport async function getOwnedEmojis(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}","import { useState, useEffect } from 'react';\nimport { providers } from \"ethers\";\nimport Web3Modal from 'web3modal'\nimport { getOwnedEmojis } from \"../lib/erc20\";\nimport { getOwnedTokens } from \"../lib/erc721\";\nimport Toast from 'react-bootstrap/Toast';\n\nfunction ConnectWallet({ onAccountConnect }) {\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const [address, setAddress] = useState(\"\");\n    const [emojis, setEmojis] = useState(0);\n    //const [emojiTokens, setEmojiTokens] = useState(null);\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n    \n        const newWeb3Modal = new Web3Modal({\n          cacheProvider: true, \n          network: \"mainnet\",\n        });\n    \n        setWeb3Modal(newWeb3Modal)\n    }, [])\n\n    useEffect(() => {\n        if(web3Modal && web3Modal.cachedProvider){\n          connectWallet()\n        }\n    }, [web3Modal])\n\n    async function connectWallet() {\n      const provider = await web3Modal.connect();\n      addListeners(provider);\n      const ethersProvider = new providers.Web3Provider(provider)\n      ethersProvider.getSigner().getAddress().then(userAddress => {\n        setAddress(userAddress)\n        onAccountConnect(userAddress);\n      });\n    }\n\n    async function disconnectWallet(){\n        await web3Modal.clearCachedProvider();\n        setAddress(\"\")\n    }\n\n    async function showBalances(){\n      setBalances(address);\n      setShow(true);\n    }    \n\n    async function setBalances(userAddress){\n      getOwnedEmojis(userAddress).then(data => {\n          setEmojis(Math.round(data / 10000000000000000) / 100);\n      });\n    }\n\n    async function addListeners(web3ModalProvider) {\n          web3ModalProvider.on(\"accountsChanged\", (accounts) => {\n          window.location.reload()\n        });\n        \n        // Subscribe to chainId change\n        web3ModalProvider.on(\"chainChanged\", (chainId) => {\n          window.location.reload()\n        });\n    }\n\n    return (\n      <>\n        { address ? (\n              <>\n                  <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n                    <Toast.Body><div><div className=\"mx-4 toast-row\">{emojis} Emojis</div></div></Toast.Body>\n                  </Toast>\n                  <button className=\"btn btn-outline-danger mx-2\" type=\"button\" onClick={disconnectWallet}>Disconnect {address.slice(-6).toUpperCase()}</button> \n                  <button className=\"btn btn-outline-secondary mx-2\" type=\"button\" onClick={() => showBalances()}>Show Balance</button>\n              </>\n              \n          ): (\n              <button type=\"button\" className=\"btn btn-outline-success\" onClick={connectWallet}>Connect Wallet</button>\n          )}\n      </>\n    );\n}\n\nexport default ConnectWallet;\n","import { Link } from \"react-router-dom\";\r\n\r\nimport \"../assets/css/base.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n    <div>\r\n      <footer className=\"py-1 bg-dark fixed-bottom footer\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            &copy; 2021 - 2022 EmojiCoins\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/dataStorage.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst contract = new ethers.Contract(process.env.REACT_APP_DATASTORE_ADDRESS, abi , polygonProvider)\n\nexport async function getTemplate(templateId){\n    const data = await contract.getTemplate(templateId);\n    return data;\n}","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/userAccess.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_USERACCESS_ADDRESS, abi, signer)\n\nexport async function getMintPrice(templateId){\n    const data = await contract.getMintPrice(templateId);\n    return data;\n}\n\nexport async function mintCoin(templateId){\n    try {\n        const data = await contract.mintCoin(templateId);\n        await polygonProvider.waitForTransaction(data.hash);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}","import { ethers } from \"ethers\";\n\nconst coinValues = {\n    1: 1, \n    2: 10,\n    3: 50,\n    4: 200,\n    10: 100, \n    11: 500,\n    12: 1000, \n    20: 4000, \n    21: 200000,\n    22: 400000\n}\n\nexport async function getCoinPrice(coinType){\n    return coinValues[coinType] ? ethers.utils.parseEther(coinValues[coinType].toString())  : false;\n}\n\nconst coinGrades = {\n    1 :\"P1\",\n    2 : \"FR2\",\n    3 : \"AG3\",\n    4 : \"G4\",\n    5 : \"VG5\",\n    6 : \"F12\",\n    7 : \"VF20\",\n    8 : \"VF30\",\n    9 : \"EF40\",\n    10 : \"XF45\",\n    11 : \"AU50\",\n    12 : \"AU55\",\n    13 : \"AU58\",\n    14 : \"MS60\",\n    15 : \"MS61\",\n    16 : \"MS62\",\n    17 : \"MS63\",\n    18 : \"MS64\",\n    19 : \"MS65\",\n    20 : \"MS66\",\n    21 : \"MS67\",\n    22 : \"MS68\",\n    23 : \"MS69\",\n    24 : \"MS70\"\n}\n\nexport async function getCoinGrade(grade){\n    return coinGrades[grade] ;\n}\n\nconst coinTypes = {\n    1 : \"Copper\",\n    2 : \"Silver-Plated\",\n    3 : \"Gold-Plated\",\n    4 : \"Limited Edition\",\n    10 : \"Silver\",\n    11 : \"Silver Gold-Plated\",\n    12 : \"Silver Limited Edition\",\n    20 : \"Gold / Silver Bi-Metal\",\n    21 : \"Gold\",\n    22 : \"Gold Limited Edition\"\n}\n\nexport async function getCoinType(type){\n    return coinTypes[type] ;\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Stepper from \"react-stepper-horizontal/lib/Stepper\";\nimport { getTemplate } from \"../lib/datastorage\";\nimport { getMintPrice, mintCoin } from \"../lib/userAccess\";\nimport { getCoinGrade, getCoinType } from \"../lib/helpers\";\nimport { approve } from \"../lib/erc20\";\nimport \"../assets/css/Home.css\";\n\n\nfunction Home( { accountConnected} ) {\n  const { id } = useParams();\n  const [ templateId, setTemplateId ] = useState(0);\n  const [ inputErrors, setInputErrors ] = useState(\"\");\n  const [ templateDetail, setTemplateDetail] = useState(null);\n  const [ coinType, setCoinType ] = useState(\"\");\n  const [ coinGrade, setCoinGrade ] = useState(\"\");\n  const [ emojiCount, setEmojiCount ] = useState(0);\n  const [ modalErrors, setModalErrors ] = useState(\"\");\n  const [ mintCoinModalVisibiltiy, setMintCoinModalVisibiltiy] = useState(false);\n  const [ mintCoinStep, setMintCoinStep ] = useState(0);\n  const [ mintCoinApproveBtnText, setMintCoinApproveBtnText] = useState(\"Approve\");\n  const [ mintCoinApproveBtnDisabled, setMintCoinApproveBtnDisabled] = useState(false);\n  const [ mintCoinActionBtnText, setMintCoinActionBtnText] = useState(\"Mint\");\n  const [ mintCoinActionBtnDisabled, setMintCoinActionBtnDisabled] = useState(false);\n\n  useEffect(() => {\n    if (id != null) {\n      setTemplateId(id);\n      loadTemplate(id);\n    }\n  }, [accountConnected])\n\n  function loadTemplate(templateId){\n    setInputErrors(\"\");\n    setEmojiCount(0);\n    getTemplate(templateId).then(data => {\n      if (data != null) {\n        setTemplateDetail(data);\n\n        getCoinType(data.coinType).then(type => {\n          setCoinType(type);\n        });\n\n        getCoinGrade(data.coinGrade).then(grade => {\n          setCoinGrade(grade);\n        });\n\n        getMintPrice(templateId).then(coinPrice => {\n          setEmojiCount(coinPrice / 1000000000000000000);\n        }).catch(error => {\n          setEmojiCount(0);\n        });\n\n        if (data?.coinMintCount > 0) setInputErrors(\"This Coin is already minted.\");\n      }\n    }).catch(error => {\n      //console.log(error);\n      setTemplateDetail(null);\n      setInputErrors(\"Failed to load Template.\");\n    });\n  }\n\n  function loadTemplateClick()\n  {\n    loadTemplate(templateId);\n  }\n\n  // Mint Coin Modal -----------------------------------------------------------------\n\n  function mintCoinModalShow(){\n    setMintCoinStep(0);\n    setMintCoinApproveBtnText(\"Approve Emoji Burn\");\n    setMintCoinActionBtnText(\"Mint\");\n    setMintCoinApproveBtnDisabled(false);\n    setMintCoinActionBtnDisabled(true);\n    setMintCoinModalVisibiltiy(true);\n    setModalErrors(\"\");\n  }\n\n  function mintCoinApproveClick(){\n    resetMintCoinModalFields();\n    setMintCoinApproveBtnText(\"Approving...\");\n    setMintCoinApproveBtnDisabled(true);\n    getMintPrice(templateId).then(coinPrice => {\n      approve(process.env.REACT_APP_USERACCESS_ADDRESS, coinPrice).then(val => {\n        if (val === \"1\"){\n          setMintCoinStep(1);\n          setMintCoinActionBtnDisabled(false);\n          setMintCoinApproveBtnText(\"Approved\");\n        } else {\n          setModalErrors(extractMessage(val?.message));\n          setMintCoinApproveBtnDisabled(false);\n          setMintCoinApproveBtnText(\"Approve Emoji Burn\");\n        }\n      })\n    })\n  }\n\n  async function mintCoinClick(){\n    setModalErrors(\"\");\n    setMintCoinActionBtnDisabled(true);\n    setMintCoinActionBtnText(\"Minting...\");\n    mintCoin(templateId).then(val => {\n      if (val === \"1\"){\n        alert(\"The Coin was minted successfully and shortly will arrive to your wallet! Please click 'Refresh Metadata' on Opensea gallery to see changes on Opensea.\");\n        setMintCoinModalVisibiltiy(false);\n      } else {\n        setModalErrors(extractMessage(val?.message));\n      }\n      setMintCoinActionBtnText(\"Mint\");\n      setMintCoinActionBtnDisabled(false);\n    })\n  }\n\n  function resetMintCoinModalFields(){\n    setModalErrors(\"\");\n    setMintCoinActionBtnDisabled(true);\n  }  \n\n  function extractMessage(message) {\n    if (message == null) return \"Failed to execute transaction.\";\n\n    let startIndex = message.indexOf('execution reverted:');\n    if (startIndex > 0)\n    {\n      let userMessage = message.substring(startIndex + 20);\n      return userMessage.substring(0, userMessage.indexOf('\"'))\n    }\n\n    if (message.length > 100) return \"Failed to execute transaction.\";\n\n    return message;\n  }\n\n  return (\n    <>\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card galery-container\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <span><b>{'Enter Emoji Template Id'}</b></span>\n                <div className=\"col-md-4\">\n                  <input maxLength={5} className=\"form-control\" value={templateId != null ? templateId : 0 } onChange={event => setTemplateId(event.target.value.replace(/\\D/,''))} />\n                </div>\n                <div className=\"col-md-4\">\n                  {\n                    true ? (\n                      <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={loadTemplateClick}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 19 19\">\n                          <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\n                          <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\n                        </svg>                             \n                        Load Template\n                      </button>) \n                    : <></>\n                  }\n\n                </div>\n              </div>\n              <span className=\"text-danger\">{ inputErrors } </span>\n              <br/>\n\n\n              <div className=\"row\">\n                <div className=\"col-md-12 px-1\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Name:</b> { templateDetail?.coinName }</div>\n                          </div>\n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Coin Type:</b> { coinType }</div>\n                          </div>\n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail != null ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Coin Grade:</b> { coinGrade }</div>\n                          </div>     \n                          ) \n                        : <></>                        \n                      }\n                      {\n                        templateDetail?.coinMintCount > 0 ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Minted Count:</b> { templateDetail?.coinMintCount }</div>\n                          </div>                          \n                          ) \n                          : <></>\n                      }                             \n                      {\n                        emojiCount > 0 ? (\n                          <div className=\"row px-2\">\n                            <div className=\"col-md-12\"><b>Minting Price:</b> { emojiCount } Emojis</div>\n                            <br/>\n                            <br/>\n                          </div>                                                        \n                          ) \n                          : <></>\n                      } \n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"btn-group\" role=\"group\">\n                            {\n                            emojiCount > 0 && accountConnected != null ? (\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={mintCoinModalShow}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-plus-square\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n                                  <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n                                </svg>                                                                \n                                Mint Coin\n                              </button>) \n                            : <></>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n\n              <Modal show={mintCoinModalVisibiltiy} onHide={() => setMintCoinModalVisibiltiy(false)} centered>\n                <Modal.Header closeButton>\n                  <Modal.Title>Mint Coin</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <span>{'You must burn ' + emojiCount + ' Emojis to mint this coin.'}</span><br/>\n                  <span className=\"text-danger\">{modalErrors}</span>\n                </Modal.Body>\n                <Stepper steps={ [{title: 'Approve Emoji Burn'}, {title: 'Mint Coin'}] } activeStep={ mintCoinStep } size={32} circleFontSize={0} titleTop={4} />\n                <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n                  <Button variant=\"secondary\" onClick={mintCoinApproveClick} disabled={mintCoinApproveBtnDisabled}>\n                    { mintCoinApproveBtnText }\n                  </Button>\n                  <Button variant=\"primary\" disabled={mintCoinActionBtnDisabled} onClick={mintCoinClick}>\n                    { mintCoinActionBtnText }\n                  </Button>\n                </Modal.Footer>\n              </Modal> \n\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;","import { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport ConnectWallet from \"./components/ConnectWallet\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./views/Home\";\n\nfunction App() {\n  const [ accountConnected, setAccountConnected] = useState(null);\n\n  function handleOnAccountConnect(val){\n    setAccountConnected(val);\n  }\n\n  return (\n    <>\n      <Navbar connectWallet={<ConnectWallet onAccountConnect={handleOnAccountConnect}/>}/>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home accountConnected={accountConnected}/>} />\n          <Route path=\"/:id\" element={<Home accountConnected={accountConnected}/>} />\n        </Routes>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './assets/css/base.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport \"./assets/css/base.css\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}